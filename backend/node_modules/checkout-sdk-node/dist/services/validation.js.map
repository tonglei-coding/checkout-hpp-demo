{"version":3,"file":"validation.js","names":["_errors","require","_config","validatePayment","request","amount","indexOf","ValueError","currency","CURRENCIES","payment_type","toLowerCase","PAYMENT_TYPES","source","type","reference","exports","setSourceOrDestinationType","id","startsWith","destination","setTokenType","token_data","setSourceType","source_data","setInstrumentType"],"sources":["../../src/services/validation.js"],"sourcesContent":["/* eslint-disable prefer-template */\r\nimport { ValueError } from './errors';\r\nimport { \r\n    CURRENCIES, \r\n    PAYMENT_TYPES \r\n} from '../config';\r\n\r\nexport const validatePayment = (request) => {\r\n    if (request.amount && ('' + request.amount).indexOf('.') !== -1) {\r\n        throw new ValueError('The amount can not contain decimals.');\r\n    }\r\n    \r\n    if (!(request.currency in CURRENCIES)) {\r\n        throw new ValueError('The currency value is not valid.');\r\n    }\r\n\r\n    if (request.payment_type && !(request.payment_type.toLowerCase() in PAYMENT_TYPES)) {\r\n        throw new ValueError('The payment type is not valid.');\r\n    }\r\n\r\n    if (request.source && request.source.type && !(typeof request.source.type === 'string')) {\r\n        throw new ValueError('The source type needs to be a string.');\r\n    }\r\n\r\n    if (request.reference && !(typeof request.reference === 'string')) {\r\n        throw new ValueError('The reference needs to be a string.');\r\n    }\r\n};\r\n\r\nexport const setSourceOrDestinationType = (request) => {\r\n    if (request.source) {\r\n        if (request.source.type) {\r\n            return request;\r\n        }\r\n        if ('number' in request.source) {\r\n            request.source.type = 'card';\r\n        } else if (\r\n            'email' in request.source ||\r\n            ('id' in request.source && request.source.id.startsWith('cus_'))\r\n        ) {\r\n            request.source.type = 'customer';\r\n        } else if ('id' in request.source && request.source.id.startsWith('src_')) {\r\n            request.source.type = 'id';\r\n        } else if ('token' in request.source && !('cryptogram' in request.source)) {\r\n            request.source.type = 'token';\r\n        } else if ('token' in request.source && 'cryptogram' in request.source) {\r\n            request.source.type = 'network_token';\r\n        }\r\n    } else if (request.destination) {\r\n        if (request.destination.type) {\r\n            return request;\r\n        }\r\n        if ('number' in request.destination) {\r\n            request.destination.type = 'card';\r\n        } else if ('token' in request.destination) {\r\n            request.destination.type = 'token';\r\n        } else if ('id' in request.destination) {\r\n            request.destination.type = 'id';\r\n        }\r\n    }\r\n    return request;\r\n};\r\n\r\nexport const setTokenType = (request) => {\r\n    if (request.type) {\r\n        return request;\r\n    }\r\n    if ('number' in request) {\r\n        request.type = 'card';\r\n    } else if ('token_data' in request && 'header' in request.token_data) {\r\n        request.type = 'applepay';\r\n    } else if ('token_data' in request && 'signedMessage' in request.token_data) {\r\n        request.type = 'googlepay';\r\n    }\r\n    return request;\r\n};\r\n\r\nexport const setSourceType = (request) => {\r\n    if (request.type) {\r\n        return request;\r\n    }\r\n    if ('source_data' in request && 'account_type' in request.source_data) {\r\n        request.type = 'ach';\r\n    } else if ('source_data' in request && 'account_iban' in request.source_data) {\r\n        request.type = 'sepa';\r\n    }\r\n    return request;\r\n};\r\n\r\nexport const setInstrumentType = (request) => {\r\n    if (request.type) {\r\n        return request;\r\n    }\r\n    request.type = 'token';\r\n\r\n    return request;\r\n};\r\n"],"mappings":"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","ignoreList":[]}