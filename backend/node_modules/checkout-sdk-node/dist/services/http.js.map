{"version":3,"file":"http.js","names":["_nodeFetch","_interopRequireDefault","require","_axios","_config","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","asyncGeneratorStep","n","a","c","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","pjson","buildResponse","config","response","csv","buildCsvResponse","buildJsonResponse","_x","_buildCsvResponse","txt","text","Buffer","from","status","data","JSON","parse","headers","getResponseHeaders","json","getRequestHeaders","request","authHeader","idempotencyKey","Authorization","pragma","version","formData","undefined","REQUEST_ID_HEADER","raw","requestId","API_VERSION_HEADER","getResponseAxiosHeaders","buildAxiosResponse","bodyParser","rsp","isTokenExpired","tokenExpiry","currentTimestamp","createAccessToken","exports","_ref","httpClient","body","requestBody","grant_type","client_id","client","client_secret","secret","scope","join","access","axios","url","host","includes","SANDBOX_ACCESS_URL","LIVE_ACCESS_URL","method","Accept","URLSearchParams","timeout","httpsAgent","agent","catch","error","toJSON","message","fetch","ok","_x2","_x3","_x4","httpRequest","_ref2","path","auth","expires","Date","type","token","token_type","access_token","getTime","expires_in","stringify","res","_x5","_x6","_x7","_x8","_x9","_x10","_x11","get","_ref3","_x12","_x13","_x14","_x15","post","_ref4","_x16","_x17","_x18","_x19","_x20","_x21","patch","_ref5","_x22","_x23","_x24","_x25","_x26","put","_ref6","_x27","_x28","_x29","_x30","_x31","_delete","_ref7","_x32","_x33","_x34","_x35","_default"],"sources":["../../src/services/http.js"],"sourcesContent":["/* eslint-disable no-throw-literal */\r\nimport fetch from 'node-fetch';\r\nimport axios from 'axios';\r\nimport {\r\n    API_VERSION_HEADER,\r\n    LIVE_ACCESS_URL,\r\n    REQUEST_ID_HEADER,\r\n    SANDBOX_ACCESS_URL,\r\n} from '../config';\r\n\r\nconst pjson = require('../../package.json');\r\n\r\nfunction buildResponse(config, response) {\r\n    if (config.csv) {\r\n        return buildCsvResponse(response);\r\n    }\r\n\r\n    return buildJsonResponse(response);\r\n}\r\n\r\nasync function buildCsvResponse(response) {\r\n    const txt = await response.text();\r\n\r\n    const csv = Buffer.from(txt);\r\n\r\n    return {\r\n        status: response.status,\r\n        csv,\r\n    };\r\n}\r\n\r\nfunction buildJsonResponse(response) {\r\n    return response.text().then((text) => {\r\n        const data = !text ? {} : JSON.parse(text);\r\n        const headers = getResponseHeaders(response);\r\n\r\n        return {\r\n            status: response.status,\r\n            json: data,\r\n            headers,\r\n        };\r\n    });\r\n}\r\n\r\nfunction getRequestHeaders(config, request, authHeader, idempotencyKey) {\r\n    let headers = {\r\n        ...config.headers,\r\n        Authorization: authHeader,\r\n        'Cache-Control': 'no-cache',\r\n        pragma: 'no-cache',\r\n        'user-agent': `checkout-sdk-node/${pjson.version}`,\r\n    };\r\n\r\n    if (request && request.headers) {\r\n        headers = { ...headers, ...request.headers };\r\n    }\r\n\r\n    if (!config.formData) {\r\n        headers['Content-Type'] = config.csv ? 'text/csv' : 'application/json';\r\n    }\r\n\r\n    if (idempotencyKey !== undefined) {\r\n        headers['Cko-Idempotency-Key'] = idempotencyKey;\r\n    }\r\n\r\n    return headers;\r\n}\r\n\r\nfunction getResponseHeaders(response) {\r\n    // Return CKO response headers when available\r\n\r\n    if (REQUEST_ID_HEADER in response.headers.raw()) {\r\n        const requestId =\r\n            response.headers.raw()[REQUEST_ID_HEADER] || response.headers.raw()['request-id'];\r\n        const version =\r\n            response.headers.raw()[API_VERSION_HEADER] || response.headers.raw().version;\r\n        return {\r\n            'cko-request-id': requestId ? requestId[0] : '',\r\n            'cko-version': version ? version[0] : '',\r\n        };\r\n    }\r\n\r\n    return {};\r\n}\r\n\r\nfunction getResponseAxiosHeaders(response) {\r\n    // Return CKO response headers when available\r\n\r\n    if (REQUEST_ID_HEADER in response.headers) {\r\n        const requestId =\r\n            response.headers[REQUEST_ID_HEADER] || response.headers['request-id'];\r\n        const version =\r\n            response.headers[API_VERSION_HEADER] || response.headers.version;\r\n        return {\r\n            'cko-request-id': requestId ? requestId[0] : '',\r\n            'cko-version': version ? version[0] : '',\r\n        };\r\n    }\r\n\r\n    return {};\r\n}\r\n\r\nfunction buildAxiosResponse(config, response) {\r\n    if (config.csv) {\r\n        return {\r\n            status: response.status,\r\n            csv: Buffer.from(response.data),\r\n        };\r\n    }\r\n    return {\r\n        status: response.status,\r\n        json: response.data,\r\n        headers: getResponseAxiosHeaders(response),\r\n    };\r\n}\r\n\r\n// For 'no body' response, replace with empty object\r\nconst bodyParser = (rsp) => rsp.text().then((text) => (text ? JSON.parse(text) : {}));\r\n\r\nconst isTokenExpired = (tokenExpiry, currentTimestamp) => tokenExpiry < currentTimestamp;\r\n\r\nexport const createAccessToken = async (config, httpClient, body) => {\r\n    const requestBody = body || {\r\n        grant_type: 'client_credentials',\r\n        client_id: config.client,\r\n        client_secret: config.secret,\r\n        scope: config.scope.join(' '),\r\n    };\r\n\r\n    let access;\r\n\r\n    switch (httpClient) {\r\n        case 'axios':\r\n            access = await axios({\r\n                url: config.host.includes('sandbox') ? SANDBOX_ACCESS_URL : LIVE_ACCESS_URL,\r\n                method: 'post',\r\n                headers: {\r\n                    'Content-Type': 'application/x-www-form-urlencoded',\r\n                    Accept: 'application/json',\r\n                },\r\n                data: new URLSearchParams(requestBody),\r\n                timeout: config.timeout,\r\n                httpsAgent: config.agent,\r\n            })\r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        throw {\r\n                            status: error.response.status,\r\n                            json: error.toJSON(),\r\n                        };\r\n                    } else if (error.request) {\r\n                        throw {\r\n                            request: error.request,\r\n                            json: error.toJSON(),\r\n                        };\r\n                    } else {\r\n                        throw {\r\n                            message: error.message,\r\n                            json: error.toJSON(),\r\n                        };\r\n                    }\r\n                })\r\n                .then((response) => ({\r\n                    status: response.status,\r\n                    json: response.data,\r\n                }));\r\n            return access;\r\n\r\n        default:\r\n            access = await fetch(\r\n                config.host.includes('sandbox') ? SANDBOX_ACCESS_URL : LIVE_ACCESS_URL,\r\n                {\r\n                    method: 'post',\r\n                    timeout: config.timeout,\r\n                    agent: config.agent,\r\n                    body: new URLSearchParams(requestBody),\r\n                    headers: {\r\n                        'Content-Type': 'application/x-www-form-urlencoded',\r\n                        Accept: 'application/json',\r\n                    },\r\n                }\r\n            );\r\n            if (!access.ok) {\r\n                const json = bodyParser(access);\r\n                throw { status: access.status, json };\r\n            }\r\n\r\n            return access.text().then((text) => {\r\n                const data = text ? JSON.parse(text) : {};\r\n                return {\r\n                    status: access.status,\r\n                    json: data,\r\n                };\r\n            });\r\n    }\r\n};\r\n\r\n// eslint-disable-next-line consistent-return\r\nconst httpRequest = async (httpClient, method, path, config, auth, request, idempotencyKey) => {\r\n    let authHeader = null;\r\n\r\n    if (auth) {\r\n        authHeader = auth;\r\n    } else if (config.client) {\r\n        // TODO Refactor OAuth credentials request\r\n\r\n        // For NAS\r\n        // If an access tokens exists, and it's not expired re-use it\r\n        if (config.access && !isTokenExpired(config.access.expires, new Date())) {\r\n            authHeader = `${config.access.type} ${config.access.token}`;\r\n        } else {\r\n            const access = await createAccessToken(config, httpClient);\r\n            authHeader = `${access.json.token_type} ${access.json.access_token}`;\r\n\r\n            // eslint-disable-next-line no-param-reassign\r\n            config.access = {\r\n                token: access.json.access_token,\r\n                type: access.json.token_type,\r\n                scope: access.json.scope,\r\n                expires: new Date(new Date().getTime() + access.json.expires_in),\r\n            };\r\n        }\r\n    }\r\n\r\n    const headers = getRequestHeaders(config, request, authHeader, idempotencyKey);\r\n\r\n    let response;\r\n\r\n    switch (httpClient) {\r\n        case 'axios':\r\n            response = await axios({\r\n                url: path,\r\n                method,\r\n                headers,\r\n                data: config.formData ? request : JSON.stringify(request),\r\n                timeout: config.timeout,\r\n                httpsAgent: config.agent,\r\n            })\r\n                .catch((error) => {\r\n                    if (error.response) {\r\n                        throw {\r\n                            status: error.response.status,\r\n                            json: error.toJSON(),\r\n                        };\r\n                    } else if (error.request) {\r\n                        throw {\r\n                            request: error.request,\r\n                            json: error.toJSON(),\r\n                        };\r\n                    } else {\r\n                        throw {\r\n                            message: error.message,\r\n                            json: error.toJSON(),\r\n                        };\r\n                    }\r\n                })\r\n                .then((res) => buildAxiosResponse(config, res));\r\n            return response;\r\n\r\n        default:\r\n            response = await fetch(path, {\r\n                method,\r\n                timeout: config.timeout,\r\n                agent: config.agent,\r\n                body: config.formData ? request : JSON.stringify(request),\r\n                headers,\r\n            });\r\n\r\n            if (!response.ok) {\r\n                const json = bodyParser(response);\r\n                throw { status: response.status, json };\r\n            }\r\n\r\n            return buildResponse(config, response);\r\n    }\r\n};\r\n\r\nexport const get = async (httpClient, path, config, auth) =>\r\n    httpRequest(httpClient, 'get', path, config, auth);\r\n\r\nexport const post = async (httpClient, path, config, auth, request, idempotencyKey) =>\r\n    httpRequest(httpClient, 'post', path, config, auth, request, idempotencyKey);\r\n\r\nexport const patch = async (httpClient, path, config, auth, request) =>\r\n    httpRequest(httpClient, 'patch', path, config, auth, request);\r\n\r\nexport const put = async (httpClient, path, config, auth, request) =>\r\n    httpRequest(httpClient, 'put', path, config, auth, request);\r\n\r\nexport const _delete = async (httpClient, path, config, auth) =>\r\n    httpRequest(httpClient, 'delete', path, config, auth);\r\n\r\nexport default createAccessToken;\r\n"],"mappings":";;;;;;AACA,IAAAA,UAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,MAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAKmB,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,KAAAE,OAAA,EAAAF,CAAA;AAAA,SAAAG,QAAAH,CAAA,EAAAI,CAAA,QAAAC,CAAA,GAAAC,MAAA,CAAAC,IAAA,CAAAP,CAAA,OAAAM,MAAA,CAAAE,qBAAA,QAAAC,CAAA,GAAAH,MAAA,CAAAE,qBAAA,CAAAR,CAAA,GAAAI,CAAA,KAAAK,CAAA,GAAAA,CAAA,CAAAC,MAAA,WAAAN,CAAA,WAAAE,MAAA,CAAAK,wBAAA,CAAAX,CAAA,EAAAI,CAAA,EAAAQ,UAAA,OAAAP,CAAA,CAAAQ,IAAA,CAAAC,KAAA,CAAAT,CAAA,EAAAI,CAAA,YAAAJ,CAAA;AAAA,SAAAU,cAAAf,CAAA,aAAAI,CAAA,MAAAA,CAAA,GAAAY,SAAA,CAAAC,MAAA,EAAAb,CAAA,UAAAC,CAAA,WAAAW,SAAA,CAAAZ,CAAA,IAAAY,SAAA,CAAAZ,CAAA,QAAAA,CAAA,OAAAD,OAAA,CAAAG,MAAA,CAAAD,CAAA,OAAAa,OAAA,WAAAd,CAAA,IAAAe,eAAA,CAAAnB,CAAA,EAAAI,CAAA,EAAAC,CAAA,CAAAD,CAAA,SAAAE,MAAA,CAAAc,yBAAA,GAAAd,MAAA,CAAAe,gBAAA,CAAArB,CAAA,EAAAM,MAAA,CAAAc,yBAAA,CAAAf,CAAA,KAAAF,OAAA,CAAAG,MAAA,CAAAD,CAAA,GAAAa,OAAA,WAAAd,CAAA,IAAAE,MAAA,CAAAgB,cAAA,CAAAtB,CAAA,EAAAI,CAAA,EAAAE,MAAA,CAAAK,wBAAA,CAAAN,CAAA,EAAAD,CAAA,iBAAAJ,CAAA;AAAA,SAAAmB,gBAAAnB,CAAA,EAAAI,CAAA,EAAAC,CAAA,YAAAD,CAAA,GAAAmB,cAAA,CAAAnB,CAAA,MAAAJ,CAAA,GAAAM,MAAA,CAAAgB,cAAA,CAAAtB,CAAA,EAAAI,CAAA,IAAAoB,KAAA,EAAAnB,CAAA,EAAAO,UAAA,MAAAa,YAAA,MAAAC,QAAA,UAAA1B,CAAA,CAAAI,CAAA,IAAAC,CAAA,EAAAL,CAAA;AAAA,SAAAuB,eAAAlB,CAAA,QAAAsB,CAAA,GAAAC,YAAA,CAAAvB,CAAA,uCAAAsB,CAAA,GAAAA,CAAA,GAAAA,CAAA;AAAA,SAAAC,aAAAvB,CAAA,EAAAD,CAAA,2BAAAC,CAAA,KAAAA,CAAA,SAAAA,CAAA,MAAAL,CAAA,GAAAK,CAAA,CAAAwB,MAAA,CAAAC,WAAA,kBAAA9B,CAAA,QAAA2B,CAAA,GAAA3B,CAAA,CAAA+B,IAAA,CAAA1B,CAAA,EAAAD,CAAA,uCAAAuB,CAAA,SAAAA,CAAA,YAAAK,SAAA,yEAAA5B,CAAA,GAAA6B,MAAA,GAAAC,MAAA,EAAA7B,CAAA;AAAA,SAAA8B,mBAAAC,CAAA,EAAA/B,CAAA,EAAAL,CAAA,EAAAI,CAAA,EAAAK,CAAA,EAAA4B,CAAA,EAAAC,CAAA,cAAAX,CAAA,GAAAS,CAAA,CAAAC,CAAA,EAAAC,CAAA,GAAAC,CAAA,GAAAZ,CAAA,CAAAH,KAAA,WAAAY,CAAA,gBAAApC,CAAA,CAAAoC,CAAA,KAAAT,CAAA,CAAAa,IAAA,GAAAnC,CAAA,CAAAkC,CAAA,IAAAE,OAAA,CAAAC,OAAA,CAAAH,CAAA,EAAAI,IAAA,CAAAvC,CAAA,EAAAK,CAAA;AAAA,SAAAmC,kBAAAR,CAAA,6BAAA/B,CAAA,SAAAL,CAAA,GAAAgB,SAAA,aAAAyB,OAAA,WAAArC,CAAA,EAAAK,CAAA,QAAA4B,CAAA,GAAAD,CAAA,CAAAtB,KAAA,CAAAT,CAAA,EAAAL,CAAA,YAAA6C,MAAAT,CAAA,IAAAD,kBAAA,CAAAE,CAAA,EAAAjC,CAAA,EAAAK,CAAA,EAAAoC,KAAA,EAAAC,MAAA,UAAAV,CAAA,cAAAU,OAAAV,CAAA,IAAAD,kBAAA,CAAAE,CAAA,EAAAjC,CAAA,EAAAK,CAAA,EAAAoC,KAAA,EAAAC,MAAA,WAAAV,CAAA,KAAAS,KAAA,mBARnB;AAUA,MAAME,KAAK,GAAGlD,OAAO,CAAC,oBAAoB,CAAC;AAE3C,SAASmD,aAAaA,CAACC,MAAM,EAAEC,QAAQ,EAAE;EACrC,IAAID,MAAM,CAACE,GAAG,EAAE;IACZ,OAAOC,gBAAgB,CAACF,QAAQ,CAAC;EACrC;EAEA,OAAOG,iBAAiB,CAACH,QAAQ,CAAC;AACtC;AAAC,SAEcE,gBAAgBA,CAAAE,EAAA;EAAA,OAAAC,iBAAA,CAAAzC,KAAA,OAAAE,SAAA;AAAA;AAAA,SAAAuC,kBAAA;EAAAA,iBAAA,GAAAX,iBAAA,CAA/B,WAAgCM,QAAQ,EAAE;IACtC,MAAMM,GAAG,SAASN,QAAQ,CAACO,IAAI,CAAC,CAAC;IAEjC,MAAMN,GAAG,GAAGO,MAAM,CAACC,IAAI,CAACH,GAAG,CAAC;IAE5B,OAAO;MACHI,MAAM,EAAEV,QAAQ,CAACU,MAAM;MACvBT;IACJ,CAAC;EACL,CAAC;EAAA,OAAAI,iBAAA,CAAAzC,KAAA,OAAAE,SAAA;AAAA;AAED,SAASqC,iBAAiBA,CAACH,QAAQ,EAAE;EACjC,OAAOA,QAAQ,CAACO,IAAI,CAAC,CAAC,CAACd,IAAI,CAAEc,IAAI,IAAK;IAClC,MAAMI,IAAI,GAAG,CAACJ,IAAI,GAAG,CAAC,CAAC,GAAGK,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC;IAC1C,MAAMO,OAAO,GAAGC,kBAAkB,CAACf,QAAQ,CAAC;IAE5C,OAAO;MACHU,MAAM,EAAEV,QAAQ,CAACU,MAAM;MACvBM,IAAI,EAAEL,IAAI;MACVG;IACJ,CAAC;EACL,CAAC,CAAC;AACN;AAEA,SAASG,iBAAiBA,CAAClB,MAAM,EAAEmB,OAAO,EAAEC,UAAU,EAAEC,cAAc,EAAE;EACpE,IAAIN,OAAO,GAAAjD,aAAA,CAAAA,aAAA,KACJkC,MAAM,CAACe,OAAO;IACjBO,aAAa,EAAEF,UAAU;IACzB,eAAe,EAAE,UAAU;IAC3BG,MAAM,EAAE,UAAU;IAClB,YAAY,EAAE,qBAAqBzB,KAAK,CAAC0B,OAAO;EAAE,EACrD;EAED,IAAIL,OAAO,IAAIA,OAAO,CAACJ,OAAO,EAAE;IAC5BA,OAAO,GAAAjD,aAAA,CAAAA,aAAA,KAAQiD,OAAO,GAAKI,OAAO,CAACJ,OAAO,CAAE;EAChD;EAEA,IAAI,CAACf,MAAM,CAACyB,QAAQ,EAAE;IAClBV,OAAO,CAAC,cAAc,CAAC,GAAGf,MAAM,CAACE,GAAG,GAAG,UAAU,GAAG,kBAAkB;EAC1E;EAEA,IAAImB,cAAc,KAAKK,SAAS,EAAE;IAC9BX,OAAO,CAAC,qBAAqB,CAAC,GAAGM,cAAc;EACnD;EAEA,OAAON,OAAO;AAClB;AAEA,SAASC,kBAAkBA,CAACf,QAAQ,EAAE;EAClC;;EAEA,IAAI0B,yBAAiB,IAAI1B,QAAQ,CAACc,OAAO,CAACa,GAAG,CAAC,CAAC,EAAE;IAC7C,MAAMC,SAAS,GACX5B,QAAQ,CAACc,OAAO,CAACa,GAAG,CAAC,CAAC,CAACD,yBAAiB,CAAC,IAAI1B,QAAQ,CAACc,OAAO,CAACa,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC;IACrF,MAAMJ,OAAO,GACTvB,QAAQ,CAACc,OAAO,CAACa,GAAG,CAAC,CAAC,CAACE,0BAAkB,CAAC,IAAI7B,QAAQ,CAACc,OAAO,CAACa,GAAG,CAAC,CAAC,CAACJ,OAAO;IAChF,OAAO;MACH,gBAAgB,EAAEK,SAAS,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MAC/C,aAAa,EAAEL,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG;IAC1C,CAAC;EACL;EAEA,OAAO,CAAC,CAAC;AACb;AAEA,SAASO,uBAAuBA,CAAC9B,QAAQ,EAAE;EACvC;;EAEA,IAAI0B,yBAAiB,IAAI1B,QAAQ,CAACc,OAAO,EAAE;IACvC,MAAMc,SAAS,GACX5B,QAAQ,CAACc,OAAO,CAACY,yBAAiB,CAAC,IAAI1B,QAAQ,CAACc,OAAO,CAAC,YAAY,CAAC;IACzE,MAAMS,OAAO,GACTvB,QAAQ,CAACc,OAAO,CAACe,0BAAkB,CAAC,IAAI7B,QAAQ,CAACc,OAAO,CAACS,OAAO;IACpE,OAAO;MACH,gBAAgB,EAAEK,SAAS,GAAGA,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;MAC/C,aAAa,EAAEL,OAAO,GAAGA,OAAO,CAAC,CAAC,CAAC,GAAG;IAC1C,CAAC;EACL;EAEA,OAAO,CAAC,CAAC;AACb;AAEA,SAASQ,kBAAkBA,CAAChC,MAAM,EAAEC,QAAQ,EAAE;EAC1C,IAAID,MAAM,CAACE,GAAG,EAAE;IACZ,OAAO;MACHS,MAAM,EAAEV,QAAQ,CAACU,MAAM;MACvBT,GAAG,EAAEO,MAAM,CAACC,IAAI,CAACT,QAAQ,CAACW,IAAI;IAClC,CAAC;EACL;EACA,OAAO;IACHD,MAAM,EAAEV,QAAQ,CAACU,MAAM;IACvBM,IAAI,EAAEhB,QAAQ,CAACW,IAAI;IACnBG,OAAO,EAAEgB,uBAAuB,CAAC9B,QAAQ;EAC7C,CAAC;AACL;;AAEA;AACA,MAAMgC,UAAU,GAAIC,GAAG,IAAKA,GAAG,CAAC1B,IAAI,CAAC,CAAC,CAACd,IAAI,CAAEc,IAAI,IAAMA,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,GAAG,CAAC,CAAE,CAAC;AAErF,MAAM2B,cAAc,GAAGA,CAACC,WAAW,EAAEC,gBAAgB,KAAKD,WAAW,GAAGC,gBAAgB;AAEjF,MAAMC,iBAAiB,GAAAC,OAAA,CAAAD,iBAAA;EAAA,IAAAE,IAAA,GAAA7C,iBAAA,CAAG,WAAOK,MAAM,EAAEyC,UAAU,EAAEC,IAAI,EAAK;IACjE,MAAMC,WAAW,GAAGD,IAAI,IAAI;MACxBE,UAAU,EAAE,oBAAoB;MAChCC,SAAS,EAAE7C,MAAM,CAAC8C,MAAM;MACxBC,aAAa,EAAE/C,MAAM,CAACgD,MAAM;MAC5BC,KAAK,EAAEjD,MAAM,CAACiD,KAAK,CAACC,IAAI,CAAC,GAAG;IAChC,CAAC;IAED,IAAIC,MAAM;IAEV,QAAQV,UAAU;MACd,KAAK,OAAO;QACRU,MAAM,SAAS,IAAAC,cAAK,EAAC;UACjBC,GAAG,EAAErD,MAAM,CAACsD,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAGC,0BAAkB,GAAGC,uBAAe;UAC3EC,MAAM,EAAE,MAAM;UACd3C,OAAO,EAAE;YACL,cAAc,EAAE,mCAAmC;YACnD4C,MAAM,EAAE;UACZ,CAAC;UACD/C,IAAI,EAAE,IAAIgD,eAAe,CAACjB,WAAW,CAAC;UACtCkB,OAAO,EAAE7D,MAAM,CAAC6D,OAAO;UACvBC,UAAU,EAAE9D,MAAM,CAAC+D;QACvB,CAAC,CAAC,CACGC,KAAK,CAAEC,KAAK,IAAK;UACd,IAAIA,KAAK,CAAChE,QAAQ,EAAE;YAChB,MAAM;cACFU,MAAM,EAAEsD,KAAK,CAAChE,QAAQ,CAACU,MAAM;cAC7BM,IAAI,EAAEgD,KAAK,CAACC,MAAM,CAAC;YACvB,CAAC;UACL,CAAC,MAAM,IAAID,KAAK,CAAC9C,OAAO,EAAE;YACtB,MAAM;cACFA,OAAO,EAAE8C,KAAK,CAAC9C,OAAO;cACtBF,IAAI,EAAEgD,KAAK,CAACC,MAAM,CAAC;YACvB,CAAC;UACL,CAAC,MAAM;YACH,MAAM;cACFC,OAAO,EAAEF,KAAK,CAACE,OAAO;cACtBlD,IAAI,EAAEgD,KAAK,CAACC,MAAM,CAAC;YACvB,CAAC;UACL;QACJ,CAAC,CAAC,CACDxE,IAAI,CAAEO,QAAQ,KAAM;UACjBU,MAAM,EAAEV,QAAQ,CAACU,MAAM;UACvBM,IAAI,EAAEhB,QAAQ,CAACW;QACnB,CAAC,CAAC,CAAC;QACP,OAAOuC,MAAM;MAEjB;QACIA,MAAM,SAAS,IAAAiB,kBAAK,EAChBpE,MAAM,CAACsD,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAGC,0BAAkB,GAAGC,uBAAe,EACtE;UACIC,MAAM,EAAE,MAAM;UACdG,OAAO,EAAE7D,MAAM,CAAC6D,OAAO;UACvBE,KAAK,EAAE/D,MAAM,CAAC+D,KAAK;UACnBrB,IAAI,EAAE,IAAIkB,eAAe,CAACjB,WAAW,CAAC;UACtC5B,OAAO,EAAE;YACL,cAAc,EAAE,mCAAmC;YACnD4C,MAAM,EAAE;UACZ;QACJ,CACJ,CAAC;QACD,IAAI,CAACR,MAAM,CAACkB,EAAE,EAAE;UACZ,MAAMpD,IAAI,GAAGgB,UAAU,CAACkB,MAAM,CAAC;UAC/B,MAAM;YAAExC,MAAM,EAAEwC,MAAM,CAACxC,MAAM;YAAEM;UAAK,CAAC;QACzC;QAEA,OAAOkC,MAAM,CAAC3C,IAAI,CAAC,CAAC,CAACd,IAAI,CAAEc,IAAI,IAAK;UAChC,MAAMI,IAAI,GAAGJ,IAAI,GAAGK,IAAI,CAACC,KAAK,CAACN,IAAI,CAAC,GAAG,CAAC,CAAC;UACzC,OAAO;YACHG,MAAM,EAAEwC,MAAM,CAACxC,MAAM;YACrBM,IAAI,EAAEL;UACV,CAAC;QACL,CAAC,CAAC;IACV;EACJ,CAAC;EAAA,gBA1EY0B,iBAAiBA,CAAAgC,GAAA,EAAAC,GAAA,EAAAC,GAAA;IAAA,OAAAhC,IAAA,CAAA3E,KAAA,OAAAE,SAAA;EAAA;AAAA,GA0E7B;;AAED;AACA,MAAM0G,WAAW;EAAA,IAAAC,KAAA,GAAA/E,iBAAA,CAAG,WAAO8C,UAAU,EAAEiB,MAAM,EAAEiB,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO,EAAEE,cAAc,EAAK;IAC3F,IAAID,UAAU,GAAG,IAAI;IAErB,IAAIwD,IAAI,EAAE;MACNxD,UAAU,GAAGwD,IAAI;IACrB,CAAC,MAAM,IAAI5E,MAAM,CAAC8C,MAAM,EAAE;MACtB;;MAEA;MACA;MACA,IAAI9C,MAAM,CAACmD,MAAM,IAAI,CAAChB,cAAc,CAACnC,MAAM,CAACmD,MAAM,CAAC0B,OAAO,EAAE,IAAIC,IAAI,CAAC,CAAC,CAAC,EAAE;QACrE1D,UAAU,GAAG,GAAGpB,MAAM,CAACmD,MAAM,CAAC4B,IAAI,IAAI/E,MAAM,CAACmD,MAAM,CAAC6B,KAAK,EAAE;MAC/D,CAAC,MAAM;QACH,MAAM7B,MAAM,SAASb,iBAAiB,CAACtC,MAAM,EAAEyC,UAAU,CAAC;QAC1DrB,UAAU,GAAG,GAAG+B,MAAM,CAAClC,IAAI,CAACgE,UAAU,IAAI9B,MAAM,CAAClC,IAAI,CAACiE,YAAY,EAAE;;QAEpE;QACAlF,MAAM,CAACmD,MAAM,GAAG;UACZ6B,KAAK,EAAE7B,MAAM,CAAClC,IAAI,CAACiE,YAAY;UAC/BH,IAAI,EAAE5B,MAAM,CAAClC,IAAI,CAACgE,UAAU;UAC5BhC,KAAK,EAAEE,MAAM,CAAClC,IAAI,CAACgC,KAAK;UACxB4B,OAAO,EAAE,IAAIC,IAAI,CAAC,IAAIA,IAAI,CAAC,CAAC,CAACK,OAAO,CAAC,CAAC,GAAGhC,MAAM,CAAClC,IAAI,CAACmE,UAAU;QACnE,CAAC;MACL;IACJ;IAEA,MAAMrE,OAAO,GAAGG,iBAAiB,CAAClB,MAAM,EAAEmB,OAAO,EAAEC,UAAU,EAAEC,cAAc,CAAC;IAE9E,IAAIpB,QAAQ;IAEZ,QAAQwC,UAAU;MACd,KAAK,OAAO;QACRxC,QAAQ,SAAS,IAAAmD,cAAK,EAAC;UACnBC,GAAG,EAAEsB,IAAI;UACTjB,MAAM;UACN3C,OAAO;UACPH,IAAI,EAAEZ,MAAM,CAACyB,QAAQ,GAAGN,OAAO,GAAGN,IAAI,CAACwE,SAAS,CAAClE,OAAO,CAAC;UACzD0C,OAAO,EAAE7D,MAAM,CAAC6D,OAAO;UACvBC,UAAU,EAAE9D,MAAM,CAAC+D;QACvB,CAAC,CAAC,CACGC,KAAK,CAAEC,KAAK,IAAK;UACd,IAAIA,KAAK,CAAChE,QAAQ,EAAE;YAChB,MAAM;cACFU,MAAM,EAAEsD,KAAK,CAAChE,QAAQ,CAACU,MAAM;cAC7BM,IAAI,EAAEgD,KAAK,CAACC,MAAM,CAAC;YACvB,CAAC;UACL,CAAC,MAAM,IAAID,KAAK,CAAC9C,OAAO,EAAE;YACtB,MAAM;cACFA,OAAO,EAAE8C,KAAK,CAAC9C,OAAO;cACtBF,IAAI,EAAEgD,KAAK,CAACC,MAAM,CAAC;YACvB,CAAC;UACL,CAAC,MAAM;YACH,MAAM;cACFC,OAAO,EAAEF,KAAK,CAACE,OAAO;cACtBlD,IAAI,EAAEgD,KAAK,CAACC,MAAM,CAAC;YACvB,CAAC;UACL;QACJ,CAAC,CAAC,CACDxE,IAAI,CAAE4F,GAAG,IAAKtD,kBAAkB,CAAChC,MAAM,EAAEsF,GAAG,CAAC,CAAC;QACnD,OAAOrF,QAAQ;MAEnB;QACIA,QAAQ,SAAS,IAAAmE,kBAAK,EAACO,IAAI,EAAE;UACzBjB,MAAM;UACNG,OAAO,EAAE7D,MAAM,CAAC6D,OAAO;UACvBE,KAAK,EAAE/D,MAAM,CAAC+D,KAAK;UACnBrB,IAAI,EAAE1C,MAAM,CAACyB,QAAQ,GAAGN,OAAO,GAAGN,IAAI,CAACwE,SAAS,CAAClE,OAAO,CAAC;UACzDJ;QACJ,CAAC,CAAC;QAEF,IAAI,CAACd,QAAQ,CAACoE,EAAE,EAAE;UACd,MAAMpD,IAAI,GAAGgB,UAAU,CAAChC,QAAQ,CAAC;UACjC,MAAM;YAAEU,MAAM,EAAEV,QAAQ,CAACU,MAAM;YAAEM;UAAK,CAAC;QAC3C;QAEA,OAAOlB,aAAa,CAACC,MAAM,EAAEC,QAAQ,CAAC;IAC9C;EACJ,CAAC;EAAA,gBA7EKwE,WAAWA,CAAAc,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,GAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAnB,KAAA,CAAA7G,KAAA,OAAAE,SAAA;EAAA;AAAA,GA6EhB;AAEM,MAAM+H,GAAG,GAAAvD,OAAA,CAAAuD,GAAA;EAAA,IAAAC,KAAA,GAAApG,iBAAA,CAAG,WAAO8C,UAAU,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI;IAAA,OACpDH,WAAW,CAAChC,UAAU,EAAE,KAAK,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,CAAC;EAAA;EAAA,gBADzCkB,GAAGA,CAAAE,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAJ,KAAA,CAAAlI,KAAA,OAAAE,SAAA;EAAA;AAAA,GACsC;AAE/C,MAAMqI,IAAI,GAAA7D,OAAA,CAAA6D,IAAA;EAAA,IAAAC,KAAA,GAAA1G,iBAAA,CAAG,WAAO8C,UAAU,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO,EAAEE,cAAc;IAAA,OAC9EoD,WAAW,CAAChC,UAAU,EAAE,MAAM,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO,EAAEE,cAAc,CAAC;EAAA;EAAA,gBADnE+E,IAAIA,CAAAE,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAN,KAAA,CAAAxI,KAAA,OAAAE,SAAA;EAAA;AAAA,GAC+D;AAEzE,MAAM6I,KAAK,GAAArE,OAAA,CAAAqE,KAAA;EAAA,IAAAC,KAAA,GAAAlH,iBAAA,CAAG,WAAO8C,UAAU,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO;IAAA,OAC/DsD,WAAW,CAAChC,UAAU,EAAE,OAAO,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO,CAAC;EAAA;EAAA,gBADpDyF,KAAKA,CAAAE,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAL,KAAA,CAAAhJ,KAAA,OAAAE,SAAA;EAAA;AAAA,GAC+C;AAE1D,MAAMoJ,GAAG,GAAA5E,OAAA,CAAA4E,GAAA;EAAA,IAAAC,KAAA,GAAAzH,iBAAA,CAAG,WAAO8C,UAAU,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO;IAAA,OAC7DsD,WAAW,CAAChC,UAAU,EAAE,KAAK,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,EAAEzD,OAAO,CAAC;EAAA;EAAA,gBADlDgG,GAAGA,CAAAE,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAL,KAAA,CAAAvJ,KAAA,OAAAE,SAAA;EAAA;AAAA,GAC+C;AAExD,MAAM2J,OAAO,GAAAnF,OAAA,CAAAmF,OAAA;EAAA,IAAAC,KAAA,GAAAhI,iBAAA,CAAG,WAAO8C,UAAU,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI;IAAA,OACxDH,WAAW,CAAChC,UAAU,EAAE,QAAQ,EAAEkC,IAAI,EAAE3E,MAAM,EAAE4E,IAAI,CAAC;EAAA;EAAA,gBAD5C8C,OAAOA,CAAAE,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA;IAAA,OAAAJ,KAAA,CAAA9J,KAAA,OAAAE,SAAA;EAAA;AAAA,GACqC;AAAC,IAAAiK,QAAA,GAAAzF,OAAA,CAAAtF,OAAA,GAE3CqF,iBAAiB","ignoreList":[]}