{"version":3,"file":"instruments.js","names":["_errors","require","_http","_validation","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","Instruments","constructor","config","create","body","_this","setInstrumentType","response","post","httpClient","host","sk","json","err","error","determineError","get","id","_this2","update","_this3","patch","delete","_this4","_delete","getBankAccountFieldFormatting","country","currency","_this5","exports","default"],"sources":["../../../src/api/instruments/instruments.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { _delete, get, patch, post } from '../../services/http';\r\nimport { setInstrumentType } from '../../services/validation';\r\n\r\n/**\r\n * Class dealing with the /instruments endpoint\r\n *\r\n * @export\r\n * @class Instruments\r\n */\r\nexport default class Instruments {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Exchange a single use Checkout.com token for a payment instrument reference,\r\n     * that can be used at any time to request one or more payments.\r\n     *\r\n     * @memberof Instruments\r\n     * @param {Object} body Instruments request body.\r\n     * @return {Promise<Object>} A promise to the request instruments response.\r\n     */\r\n    async create(body) {\r\n        setInstrumentType(body);\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns details of an instrument\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} id Instrument id.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async get(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update details of an instrument\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} id Instrument id.\r\n     * @param {Object} body Instruments request body.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async update(id, body) {\r\n        try {\r\n            const response = await patch(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments/${id}`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete a payment instrument.\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} id Instrument id.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async delete(id) {\r\n        try {\r\n            const response = await _delete(\r\n                this.config.httpClient,\r\n                `${this.config.host}/instruments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Delete a payment instrument.\r\n     *\r\n     * @memberof Instruments\r\n     * @param {string} country Country 2 character ISO.\r\n     * @param {string} currency Currency 3 character ISO.\r\n     * @return {Promise<Object>} A promise to the instrument response.\r\n     */\r\n    async getBankAccountFieldFormatting(country, currency) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/validation/bank-accounts/${country}/${currency}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}