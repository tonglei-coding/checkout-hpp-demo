{"version":3,"file":"payments.js","names":["_errors","require","_http","_validation","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","ownKeys","Object","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","enumerable","push","_objectSpread","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","configurable","writable","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","addUtilityParams","json","requiresRedirect","destination","isPending","status","hasRedirectUrl","_links","redirect","undefined","redirectLink","href","Payments","constructor","config","request","body","idempotencyKey","_this","setSourceOrDestinationType","validatePayment","response","post","httpClient","host","sk","err","error","determineError","getPaymentList","_this2","url","queryString","map","key","join","get","id","_this3","getActions","_this4","increment","_this5","capture","paymentId","_this6","refund","_this7","void","_this8","exports","default"],"sources":["../../../src/api/payments/payments.js"],"sourcesContent":["/* eslint-disable no-underscore-dangle */\r\nimport { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\nimport { setSourceOrDestinationType, validatePayment } from '../../services/validation';\r\n\r\nconst addUtilityParams = (json) => {\r\n    let requiresRedirect = false;\r\n\r\n    if (json.destination) {\r\n        requiresRedirect = false;\r\n    } else {\r\n        const isPending = json.status === 'Pending';\r\n        const hasRedirectUrl = json._links.redirect !== undefined;\r\n        requiresRedirect = isPending && hasRedirectUrl;\r\n    }\r\n\r\n    // If the redirection URL exists add it to the response body as 'redirectLink'\r\n    let redirectLink;\r\n    if (requiresRedirect && json._links.redirect) {\r\n        redirectLink = json._links.redirect.href;\r\n    }\r\n    return {\r\n        ...json,\r\n        requiresRedirect,\r\n        redirectLink,\r\n    };\r\n};\r\n\r\n/**\r\n * Class dealing with the /payments endpoint\r\n *\r\n * @export\r\n * @class Payments\r\n */\r\nexport default class Payments {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Sends payment or a payout requests.\r\n     *\r\n     * @memberof Payments\r\n     * @param {Object} body Payment Request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to payment response.\r\n     */\r\n    async request(body, idempotencyKey) {\r\n        try {\r\n            setSourceOrDestinationType(body);\r\n            validatePayment(body);\r\n\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return addUtilityParams(await response.json);\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a list of your business' payments that match the specified reference.\r\n     *\r\n     * @memberof Payments\r\n     * @param {Object} body /^(pay|sid)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @return {Promise<Object>} A promise to the get payment response.\r\n     */\r\n    async getPaymentList(body) {\r\n        let url = `${this.config.host}/payments`;\r\n\r\n        if (body) {\r\n            const queryString = Object.keys(body)\r\n                .map((key) => `${key}=${body[key]}`)\r\n                .join('&');\r\n            url += `?${queryString}`;\r\n        }\r\n\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                url,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the details of the payment with the specified identifier string.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay|sid)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @return {Promise<Object>} A promise to the get payment response.\r\n     */\r\n    async get(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns all the actions associated with a payment ordered by processing date in\r\n     * descending order (latest first).\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment identifier.\r\n     * @return {Promise<Object>} A promise to the getActions response.\r\n     */\r\n    async getActions(id) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${id}/actions`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Request an incremental authorization to increase the authorization amount or extend\r\n     * the authorization's validity period.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} id /^(pay)_(\\w{26})$/ The payment identifier.\r\n     * @param {Object} body Payment Request body.\r\n     * @return {Promise<Object>} A promise to the getActions response.\r\n     */\r\n    async increment(id, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${id}/authorizations`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Captures a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Capture request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the capture response.\r\n     */\r\n    async capture(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${paymentId}/captures`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Refunds a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Refund request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the refund response.\r\n     */\r\n    async refund(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${paymentId}/refunds`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Voids a payment if supported by the payment method.\r\n     *\r\n     * @memberof Payments\r\n     * @param {string} paymentId /^(pay)_(\\w{26})$/ The payment or payment session identifier.\r\n     * @param {Object} [body] Void request body.\r\n     * @param {string} [idempotencyKey] Idempotency Key.\r\n     * @return {Promise<Object>} A promise to the void response.\r\n     */\r\n    async void(paymentId, body, idempotencyKey) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/payments/${paymentId}/voids`,\r\n                this.config,\r\n                this.config.sk,\r\n                body,\r\n                idempotencyKey\r\n            );\r\n            return response.json;\r\n        } catch (err) {\r\n            throw await determineError(err);\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}