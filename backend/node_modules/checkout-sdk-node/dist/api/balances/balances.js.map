{"version":3,"file":"balances.js","names":["_config","require","_errors","_http","asyncGeneratorStep","n","t","e","r","o","a","c","i","u","value","done","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","Balances","constructor","config","retrieve","id","currency","_this","url","host","includes","BALANCES_SANDBOX_URL","BALANCES_LIVE_URL","response","get","httpClient","sk","json","err","error","determineError","exports","default"],"sources":["../../../src/api/balances/balances.js"],"sourcesContent":["import { \r\n    BALANCES_LIVE_URL, \r\n    BALANCES_SANDBOX_URL \r\n} from '../../config';\r\nimport { determineError } from '../../services/errors';\r\nimport { get } from '../../services/http';\r\n\r\n/**\r\n * Class dealing with the /balances endpoint\r\n *\r\n * @export\r\n * @class Balances\r\n */\r\nexport default class Balances {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Use this endpoint to retrieve balances for each currency account belonging to an entity.\r\n     *\r\n     * @memberof Balances\r\n     * @param {string} id The ID of the entity.\r\n     * @param {string} currency The query to apply to limit the currency accounts.\r\n     * @return {Promise<Object>} A promise to the balances response.\r\n     */\r\n    async retrieve(id, currency) {\r\n        try {\r\n            const url = `${\r\n                this.config.host.includes('sandbox') ? BALANCES_SANDBOX_URL : BALANCES_LIVE_URL\r\n            }/${id}${currency ? `?query=currency:${currency}` : ''}`;\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                url,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":";;;;;;AAAA,IAAAA,OAAA,GAAAC,OAAA;AAIA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AAA0C,SAAAG,mBAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,EAAAC,CAAA,cAAAC,CAAA,GAAAP,CAAA,CAAAK,CAAA,EAAAC,CAAA,GAAAE,CAAA,GAAAD,CAAA,CAAAE,KAAA,WAAAT,CAAA,gBAAAE,CAAA,CAAAF,CAAA,KAAAO,CAAA,CAAAG,IAAA,GAAAT,CAAA,CAAAO,CAAA,IAAAG,OAAA,CAAAC,OAAA,CAAAJ,CAAA,EAAAK,IAAA,CAAAV,CAAA,EAAAC,CAAA;AAAA,SAAAU,kBAAAd,CAAA,6BAAAC,CAAA,SAAAC,CAAA,GAAAa,SAAA,aAAAJ,OAAA,WAAAR,CAAA,EAAAC,CAAA,QAAAC,CAAA,GAAAL,CAAA,CAAAgB,KAAA,CAAAf,CAAA,EAAAC,CAAA,YAAAe,MAAAjB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,UAAAlB,CAAA,cAAAkB,OAAAlB,CAAA,IAAAD,kBAAA,CAAAM,CAAA,EAAAF,CAAA,EAAAC,CAAA,EAAAa,KAAA,EAAAC,MAAA,WAAAlB,CAAA,KAAAiB,KAAA;AAE1C;AACA;AACA;AACA;AACA;AACA;AACe,MAAME,QAAQ,CAAC;EAC1BC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACA,MAAM,GAAGA,MAAM;EACxB;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACUC,QAAQA,CAACC,EAAE,EAAEC,QAAQ,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAX,iBAAA;MACzB,IAAI;QACA,MAAMY,GAAG,GAAG,GACRD,KAAI,CAACJ,MAAM,CAACM,IAAI,CAACC,QAAQ,CAAC,SAAS,CAAC,GAAGC,4BAAoB,GAAGC,yBAAiB,IAC/EP,EAAE,GAAGC,QAAQ,GAAG,mBAAmBA,QAAQ,EAAE,GAAG,EAAE,EAAE;QACxD,MAAMO,QAAQ,SAAS,IAAAC,SAAG,EACtBP,KAAI,CAACJ,MAAM,CAACY,UAAU,EACtBP,GAAG,EACHD,KAAI,CAACJ,MAAM,EACXI,KAAI,CAACJ,MAAM,CAACa,EAChB,CAAC;QACD,aAAaH,QAAQ,CAACI,IAAI;MAC9B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACV,MAAMC,KAAK,SAAS,IAAAC,sBAAc,EAACF,GAAG,CAAC;QACvC,MAAMC,KAAK;MACf;IAAC;EACL;AACJ;AAACE,OAAA,CAAAC,OAAA,GAAArB,QAAA","ignoreList":[]}