{"version":3,"file":"sessions.js","names":["_errors","require","_http","ownKeys","e","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","asyncGeneratorStep","n","a","c","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","Sessions","constructor","config","request","body","_this","response","post","httpClient","host","sk","json","err","error","determineError","get","id","channel","_this2","headers","update","_this3","put","complete","_this4","update3DSMethodCompletionIndicator","threeDsMethodCompletion","_this5","three_ds_method_completion","exports","default"],"sources":["../../../src/api/sessions/sessions.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { get, post, put } from '../../services/http';\r\n\r\n/**\r\n * Class dealing with the /sessions endpoint\r\n *\r\n * @export\r\n * @class Sessions\r\n */\r\nexport default class Sessions {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Create a payment session to authenticate a cardholder before requesting a payment.\r\n     *\r\n     * @memberof Sessions\r\n     * @param {Object} body Sessions request body.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async request(body) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/sessions`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns the details of the session with the specified identifier string.\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @param {string} channel Type of channnel.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async get(id, channel) {\r\n        try {\r\n            this.config.headers = { ...this.config.headers, channel };\r\n\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/sessions/${id}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update a session by providing information about the environment.\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @param {Object} body Sessions request body.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async update(id, body) {\r\n        try {\r\n            const response = await put(\r\n                this.config.httpClient,\r\n                `${this.config.host}/sessions/${id}/collect-data`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completes a session by posting the the following request to the callback URL\r\n     * (only relevant for non hosted sessions)\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async complete(id) {\r\n        try {\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/sessions/${id}/complete`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Completes a session by posting the the following request to the callback URL\r\n     * (only relevant for non hosted sessions)\r\n     *\r\n     * @memberof Sessions\r\n     * @param {string} id Sessions id.\r\n     * @param {string} threeDsMethodCompletion 3DS Method completion indicator\r\n     * @return {Promise<Object>} A promise to the sessions response.\r\n     */\r\n    async update3DSMethodCompletionIndicator(id, threeDsMethodCompletion) {\r\n        try {\r\n            const body = {\r\n                three_ds_method_completion: threeDsMethodCompletion,\r\n            };\r\n\r\n            const response = await put(\r\n                this.config.httpClient,\r\n                `${this.config.host}/sessions/${id}/issuer-fingerprint`,\r\n                this.config,\r\n                this.config.sk,\r\n                body\r\n            );\r\n\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]}