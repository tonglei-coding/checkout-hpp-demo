"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _errors = require("../../services/errors");
var _http = require("../../services/http");
var _validation = require("../../services/validation");
function asyncGeneratorStep(n, t, e, r, o, a, c) { try { var i = n[a](c), u = i.value; } catch (n) { return void e(n); } i.done ? t(u) : Promise.resolve(u).then(r, o); }
function _asyncToGenerator(n) { return function () { var t = this, e = arguments; return new Promise(function (r, o) { var a = n.apply(t, e); function _next(n) { asyncGeneratorStep(a, r, o, _next, _throw, "next", n); } function _throw(n) { asyncGeneratorStep(a, r, o, _next, _throw, "throw", n); } _next(void 0); }); }; }
/*
 * Class dealing with the /payment-sessions endpoint
 *
 * @export
 * @class PaymentSessions
 */
class PaymentSessions {
  constructor(config) {
    this.config = config;
  }

  /**
   * Sends payment sessions requests.
   *
   * @memberof PaymentSessions
   * @param {object} body PaymentSessions Request body.
   * @return {Promise<object>} A promise to payment context response.
   */
  request(body) {
    var _this = this;
    return _asyncToGenerator(function* () {
      try {
        (0, _validation.validatePayment)(body);
        const response = yield (0, _http.post)(_this.config.httpClient, `${_this.config.host}/payment-sessions`, _this.config, _this.config.sk, body);
        return yield response.json;
      } catch (error) {
        throw yield (0, _errors.determineError)(error);
      }
    })();
  }
}
exports.default = PaymentSessions;
//# sourceMappingURL=payment-sessions.js.map