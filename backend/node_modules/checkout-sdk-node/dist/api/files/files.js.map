{"version":3,"file":"files.js","names":["_errors","require","_http","_formData","_interopRequireDefault","e","__esModule","default","ownKeys","r","t","Object","keys","getOwnPropertySymbols","o","filter","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","_toPropertyKey","value","configurable","writable","i","_toPrimitive","Symbol","toPrimitive","call","TypeError","String","Number","asyncGeneratorStep","n","a","c","u","done","Promise","resolve","then","_asyncToGenerator","_next","_throw","Files","constructor","config","upload","body","_this","form","FormData","isUrl","file","append","filename","split","pop","path","response","post","httpClient","host","formData","sk","json","err","error","determineError","getFile","fileId","_this2","get","exports","string","url","URL","_","protocol"],"sources":["../../../src/api/files/files.js"],"sourcesContent":["import { determineError } from '../../services/errors';\r\nimport { get, post } from '../../services/http';\r\n\r\nimport FormData from 'form-data';\r\n\r\n/**\r\n * Class dealing with the /files endpoint\r\n *\r\n * @export\r\n * @class Files\r\n */\r\nexport default class Files {\r\n    constructor(config) {\r\n        this.config = config;\r\n    }\r\n\r\n    /**\r\n     * Upload a file to use as evidence in a dispute. Your file must be in either JPEG/JPG,\r\n     * PNG or PDF format, and be no larger than 4MB.\r\n     *\r\n     * @memberof Files\r\n     * @param {Object} body Files request body.\r\n     * @return {Promise<Object>} A promise to the files response.\r\n     */\r\n    async upload(body) {\r\n        try {\r\n            const form = new FormData();\r\n\r\n            // Handle local files and remote files\r\n            if (isUrl(body.file)) {\r\n                // use file and file name from remote\r\n                form.append('file', body.file, {\r\n                    filename: body.file.split('/').pop().split('#')[0].split('?')[0],\r\n                });\r\n            } else {\r\n                // use the local file\r\n                form.append('file', body.file || body.path);\r\n            }\r\n            form.append('purpose', 'dispute_evidence');\r\n\r\n            const response = await post(\r\n                this.config.httpClient,\r\n                `${this.config.host}/files`,\r\n                { ...this.config, formData: true },\r\n                this.config.sk,\r\n                form\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Retrieve information about a file that was previously uploaded.\r\n     *\r\n     * @memberof Files\r\n     * @param {string} fileId Files id.\r\n     * @return {Promise<Object>} A promise to the files response.\r\n     */\r\n    async getFile(fileId) {\r\n        try {\r\n            const response = await get(\r\n                this.config.httpClient,\r\n                `${this.config.host}/files/${fileId}`,\r\n                this.config,\r\n                this.config.sk\r\n            );\r\n            return await response.json;\r\n        } catch (err) {\r\n            const error = await determineError(err);\r\n            throw error;\r\n        }\r\n    }\r\n}\r\n\r\nconst isUrl = (string) => {\r\n    let url;\r\n\r\n    try {\r\n        url = new URL(string);\r\n    } catch (_) {\r\n        return false;\r\n    }\r\n\r\n    return url.protocol === 'http:' || url.protocol === 'https:';\r\n};\r\n"],"mappings":"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","ignoreList":[]}